name: CI

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,test]"

    - name: Run linting (Ruff)
      run: |
        python run_tests.py --mode lint --fail-fast

    - name: Run type checking (MyPy)
      run: |
        python run_tests.py --mode type --fail-fast

    - name: Run unit tests
      run: |
        python run_tests.py --mode unit --verbose --coverage --fail-fast

    - name: Run integration tests
      run: |
        python run_tests.py --mode integration --verbose --fail-fast
      continue-on-error: true  # Integration tests may fail due to external API dependencies

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false

  test-minimal:
    # Test with minimal dependencies to ensure core functionality works
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test import
      run: |
        python -c "import vep_mcp; print('Import successful')"

    - name: Test CLI help
      run: |
        python -m vep_mcp.main --help

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit[toml]

    - name: Run safety check
      run: |
        safety check --json || true

    - name: Run bandit security check
      run: |
        bandit -r vep_mcp/ -f json || true
